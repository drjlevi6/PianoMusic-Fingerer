%!PS
% dimensions.ps:

/imWidth {612} bind def 	% image width before scaling
/imHeight {792} bind def	% image height before scaling

% Paints a grayscale image using readhexstring to read a file of hex digits
%	(which must be supplied via stdin)
% reduces page size using setpagedevice

% Note: "When Ghostscript finishes reading from the pipe, it quits 
%		rather than going into interactive mode. "

/getImageDimensions{	% push array of image dimensions onto stack
	currentpagedevice /PageSize get
} def

/getPageHeight{	% push page height (= window height) onto stack
	getImageDimensions aload pop exch pop
} def

/setPageSize{	% fit window size to image
	<< /PageSize [
		imWidth %scaleFactor mul
		imHeight %scaleFactor mul
	] >> setpagedevice
} def

%/scaleFactor {10} bind def
setPageSize

%scaleFactor dup scale
0 getPageHeight translate %scaleFactor div translate

/font_height {10} bind def
/Times-Bold findfont font_height scalefont setfont

/picstr{	% string to hold image's pixels as RGB triples
	imWidth imHeight mul
	3 mul
	string
} def
 
imWidth
imHeight
8					% bits per char
[1 0 0 -1 0 0] 	% Map unit square to source, flip vertically
{ 
	(/Users/jonathan/Development/PianoMusic-Fingering/PianoMusic-Fingerer/pixels.txt) 
	(r) file	% Read image data from file pstack
	picstr readhexstring pop
}

image	% This appears to cover up anything that's already been painted, so 
		% additional painting must come _after_ the image command
% vshow.ps: print strings vertically


%--Definitions-----------------------------------------------------------------

/v_show {								% Draw string vertically,
										%	starting at current point.
										% stack: string
	dup 0 1 3 2 roll length 1 sub {		% create for loop using string's length
		exch dup 3 2 roll				% stack: string string index
		1 getinterval dup show
			stringwidth pop neg 
			font_height neg rmoveto
	} for
	pop
} def

/vb_show {								% Draw string vertically,
										%	ending at current point.
										% stack: string
	dup length font_height 2 sub mul	% move upwards (no. string chars) *
	0 exch rmoveto						%	(font height)
	v_show
} def


%--Examples--------------------------------------------------------------------
%/font_height  { 18 } bind def
%/Helvetica findfont font_height scalefont setfont
%
%/v_show { (Starts) } bind def
%/vb_show { (Ends) } bind def
%/start_point {150 400} bind def
%
%start_point moveto (------> ) show
%v_show v_show % (??)
%_show length font_height mul 0 exch rmoveto
%(S  ------> ) show
%vb_show vb_show
%currentpoint pop start_point exch pop moveto
%(   ------> ) show
%(25) v_show
%currentpoint pop start_point exch pop moveto
%%currentpoint pstack bb
%(   ------> ) show
% Contains the actual fingerings

% Fingerings: Brace 1	
135 -75 moveto
(42) vb_show
288 -65 moveto	% 270
(52) vb_show
440 -80 moveto
(3) vb_show

%0 0 moveto
%(0-234567-1_1-34567-2_2-34567-3_3-34567-4_4-34567-5_5-34567-6_6-34567-7_7-34567-8_8-) v_show
118 -180 moveto (3) v_show	%120,-190	118 -190
420 -120 moveto (3) v_show
390 -130 moveto ((LH TOP)) show
%0 -101 moveto 100 0 rlineto stroke
%0 -214 moveto 100 0 rlineto stroke
%0 -445 moveto 100 0 rlineto stroke

%274 -182 moveto (3) v_show
238 -180 moveto (1) v_show

%153 -274 moveto (1) vb_show
133 -272 moveto (1) vb_show

%150 -390 moveto (53) v_show
132 -345 moveto (53) v_show

%358 -371 moveto (42) v_show
313 -341 moveto (42) v_show

%418 -380 moveto (52) v_show
368 -340 moveto (52) v_show

%94 -523 moveto (3) vb_show
82 -478 moveto (3) vb_show

%136 -517 moveto (12) show
116 -470 moveto (12) show

%365 -177 moveto (3) vb_show
315 -187 moveto (3) vb_show

%384 -345 moveto (5) vb_show
332 -330 moveto (5) vb_show

%510 -348 moveto (1) vb_show
443 -330 moveto (1) vb_show

273 -423 moveto (1) v_show

%366 -477 moveto (4) v_show
318 -419 moveto (4) v_show

